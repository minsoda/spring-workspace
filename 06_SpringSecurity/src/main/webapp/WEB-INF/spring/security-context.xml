<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- LoginSuccessHandler 때문에 bean 생성! -->
	<bean id="loginSuccess" class="com.kh.security.LoginSuccessHandler"/>
	
	<!-- CustomAccessDeniedHandler 때문에 bean 생성! -->
	<bean id="customAccessDenied" class="com.kh.security.CustomAccessDeniedHandler"/>
	
	<!-- 비밀번호 암호화 클래스를 위한 bean 생성 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- filter 찾을 수없다는 오류가 떠서 scan 추가 해줌 -->
	<context:component-scan base-package="com.kh.security"/>
	
	<!--  -->
	<bean id="memberService" class="com.kh.security.model.service.MemberService"/>
	
	<!-- security는 거의 회원관리용 http:경로와 관련-->
	<security:http>
		<!-- 처음으로 진행할곳! access: 누구를 접근제어할건지 명시해줭, ROLE_명 으로 작성, hasAnyRole : 여러역할 부여시 login-page 는 jsp로 감-->
		<security:intercept-url pattern="/all" access="permitAll"/>
		<security:intercept-url pattern="/member" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		
		<!-- authentication-success-handler-ref : 성공시에 핸들러에 추가하겠다 -->
		<security:form-login login-page="/login" authentication-success-handler-ref="loginSuccess"/>
		
		<!-- csrf를 사용하지않겠다! 로그아웃 하면 바로 아웃 -->
		<security:csrf disabled="true"/>
		<security:logout logout-url="/logout" invalidate-session="true"/>
		
		<!-- 오류페이지 지정 jsp방식(error-page="/error").controller에 추가과 handler 방식있음-->
		<!--  <security:access-denied-handler error-page="/error"/> -->
		<!-- bean id = ref  jsp의 아래까지 가지않았기때문에 접근제한 이라는 단어만 보임-->
		<security:access-denied-handler ref="customAccessDenied"/>
		
	</security:http>
	
	<!-- 인증관련 관리하는곳 : id 아닌 name 임시로도 가능해서 </security:authentication-provider> 안에 명시. authorities : 권한 부여 {noop} : 지금 내가 명시하겠다-->
	<!-- 테이블 만들어줌 auth:권한, security:authentication-provider : enabled : 탈퇴는 0, 회원가입은 1로 표시 무조건 필수 -->
	<security:authentication-manager>
	<!-- user-service ref로 참고할게 -->
		<security:authentication-provider user-service-ref="memberService">
			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
			</security:user-service>  -->
			<security:password-encoder hash="bcrypt"/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
